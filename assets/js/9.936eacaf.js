(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{185:function(e,r,t){"use strict";t.r(r);var s=t(0),a=Object(s.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"web-worker"}},[e._v("web worker")]),e._v(" "),t("h3",{attrs:{id:"使用场景"}},[e._v("使用场景")]),e._v(" "),t("h5",{attrs:{id:"_1、数学运算"}},[e._v("1、数学运算")]),e._v(" "),t("p",[e._v("Web Worker最简单的应用就是用来做后台计算，对CPU密集型的场景再适合不过了。")]),e._v(" "),t("h5",{attrs:{id:"_2、图像处理"}},[e._v("2、图像处理")]),e._v(" "),t("p",[e._v("通过使用从 canvas 中获取的数据，可以把图像分割成几个不同的区域并且把它们推送给并行的不同Workers来做计算，对图像进行像素级的处理，再把处理完成的图像数据返回给主页面。")]),e._v(" "),t("h5",{attrs:{id:"_3、大数据的处理"}},[e._v("3、大数据的处理")]),e._v(" "),t("p",[e._v("目前mvvm框架越来越普及，基于数据驱动的开发模式也越愈发流行，未来大数据的处理也可能转向到前台，这时，将大数据的处理交给在Web Worker也是上上之策了吧。")]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"简介"}},[e._v("简介")]),e._v(" "),t("h5",{attrs:{id:"_1-生成一个专用worker"}},[e._v("1 生成一个专用worker")]),e._v(" "),t("p",[e._v("创建一个新的worker很简单。你需要做的是调用Worker() 的构造器，指定一个脚本的URI来执行worker线程（main.js）：")]),e._v(" "),e._m(0),t("h5",{attrs:{id:"_2-专用worker中消息的接收和发送"}},[e._v("2 专用worker中消息的接收和发送")]),e._v(" "),t("p",[e._v("workers通过postMessage() 方法和onmessage事件处理函数生效。向一个worker发送消息需要这样做（main.js）")]),e._v(" "),e._m(1),t("p",[e._v("在worker中接收到消息后，我们可以写这样一个事件处理函数代码作为响应（worker.js）：")]),e._v(" "),e._m(2),t("p",[e._v("onmessage处理函数允许在任何时刻，一旦接收到消息就可以执行一些代码，代码中消息本身作为事件的data属性进行使用。")]),e._v(" "),t("p",[e._v("回到主线程，我们再次使用onmessage以响应worker回传的消息：")]),e._v(" "),e._m(3),t("h5",{attrs:{id:"_3-终止worker"}},[e._v("3 终止worker")]),e._v(" "),t("p",[e._v("如果需要从主线程中立刻终止一个运行中的worker，可以调用worker的terminate 方法：")]),e._v(" "),e._m(4),t("p",[e._v("而在worker线程中，workers 也可以调用自己的 close  方法进行关闭：")]),e._v(" "),e._m(5),t("hr"),e._v(" "),e._m(6),t("h4",{attrs:{id:"像使用promise-一样使用-web-worker"}},[e._v("像使用Promise 一样使用 web-worker")]),e._v(" "),t("p",[e._v("可参考  "),t("a",{attrs:{href:"https://github.com/israelss/simple-web-worker/tree/master/src",target:"_blank",rel:"noopener noreferrer"}},[e._v("simple-web-worker"),t("OutboundLink")],1)])])},[function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("var myWorker = new Worker('worker.js');\n\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("first.onchange = function() {\n  myWorker.postMessage([first.value,second.value]);\n  console.log('Message posted to worker');\n}\n\nsecond.onchange = function() {\n  myWorker.postMessage([first.value,second.value]);\n  console.log('Message posted to worker');\n}\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("onmessage = function(e) {\n  console.log('Message received from main script');\n  var workerResult = 'Result: ' + (e.data[0] * e.data[1]);\n  console.log('Posting message back to main script');\n  postMessage(workerResult);\n}\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("myWorker.onmessage = function(e) {\n  result.textContent = e.data;\n  console.log('Message received from worker');\n}\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("myWorker.terminate();\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("close();\n")])])])},function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("创建内嵌的worker\n\nvar myTask = `\n    var i = 0;\n    function timedCount(){\n        i +=1;\n        postMessage(i);\n        setTimeout(timedCount, 1000);\n    }\n    timedCount();\n`;\n\nvar blob = new Blob([myTask]);\nvar myWorker = new Worker(window.URL.createObjectURL(blob));\n")])])])}],!1,null,null,null);a.options.__file="2018-11.md";r.default=a.exports}}]);